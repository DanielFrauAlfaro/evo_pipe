Lanzar la docker:
	sudo docker run --shm-size=1g --ulimit memlock=-1 --ulimit stack=67108864 --rm -it --name docker_ignacio --net host --cpuset-cpus="0-7" -v ~/:/daniel -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix:rw -v /dev:/dev --user=$(id -u $USER):$(id -g $USER) --privileged docker_ignacio


	Con gpu (se le aÃ±ade el "--gpus all" y "pid=host"):
		sudo docker run --shm-size=1g --ulimit memlock=-1 --ulimit stack=67108864 --rm -it --name docker_ignacio --net host --cpuset-cpus="0-7" -v ~/:/daniel -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix:rw -v /dev:/dev --user=$(id -u $USER):$(id -g $USER) --gpus all --pid=host  --privileged docker_ignacio

Abrir terminales paralelas dentro de la docker:
	sudo docker container ls -> dara un container ID (ejemplo 2b094593e916)
	sudo docker exec -it <CONTAINER_ID> bash -> ejemplo(sudo docker exec -it 2b094593e916 bash)

Probar la camara:
	(asegurarse que la camara tenga la version 5.13. Sino instalar el .bin de dentro del zip con el realsense-viewer)
	roslaunch realsense2_camera rs_camera.launch

Probar el ur:
	(sim) roslaunch ur5e_moveit_config demo.launch
	
	(real - comprobar robot operativo) ping 172.18.34.201
	(real - conexion VNC) vncviewer 172.18.34.201
	(real - calibrar brazo (si fuese necesario)) roslaunch ur_calibration calibration_correction.launch robot_ip:=172.18.34.201 target_filename:="${HOME}/calib.yaml"
	(real - conexion brazo con ROS) roslaunch ur_robot_driver ur5e_bringup.launch  robot_ip:=172.18.34.201 kinematics_config:="${HOME}/calib.yaml"
	(real - habilitar URCaps) En interfaz UR, ejecutar el programa "external_control.urp" y darle al play. OJO: la IP del ordenador host debe ser la del ordenador que lo controla
	(real - cargar info brazo real) roslaunch ur5e_moveit_config moveit_planning_execution.launch 
	(real - simular rviz pero brazo se mueve) roslaunch ur5e_moveit_config moveit_rviz.launch 


